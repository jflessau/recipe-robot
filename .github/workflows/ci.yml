name: CI
on:
  push:
    branches:
      - main

jobs:
  lint_server:
    name: "Lint: Server"
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@master
      - name: install rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          components: clippy
          override: true
      - name: format
        run: |
          cd server && cargo fmt -- --check
      - name: lint
        run: |
          cd server && cargo clippy -- -D warnings

  build_server:
    name: "Build: Server"
    runs-on: ubuntu-latest
    # needs: [lint_server] # it is a side project, let's skip linting for now
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Get short commit hash for image tag
        id: shortened_hash
        run: echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: ./server/
          platforms: linux/amd64
          push: true
          tags: |
            ghcr.io/${{ github.repository_owner }}/${{ github.event.repository.name }}-server:latest
            ghcr.io/${{ github.repository_owner }}/${{ github.event.repository.name }}-server:${{ steps.shortened_hash.outputs.sha_short }}

  lint_web:
    name: "Lint: Web"
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v4
      - name: setup node
        uses: actions/setup-node@v4
        with:
          node-version: 20.0
      - name: install bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest
      - name: lint
        run: |
          cd web && bun i && bun ci

  build_web:
    name: "Build: Web"
    runs-on: ubuntu-latest
    needs: [lint_web]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Get short commit hash for image tag
        id: shortened_hash
        run: echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: ./web/
          platforms: linux/amd64
          push: true
          tags: |
            ghcr.io/${{ github.repository_owner }}/${{ github.event.repository.name }}-web:latest
            ghcr.io/${{ github.repository_owner }}/${{ github.event.repository.name }}-web:${{ steps.shortened_hash.outputs.sha_short }}
